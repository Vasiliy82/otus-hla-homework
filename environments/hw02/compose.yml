services:
  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: "app_hw"
      POSTGRES_PASSWORD: "Passw0rd"
      POSTGRES_DB: "postgres"
    volumes:
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./postgres/init-master.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_hw -d hw"]
      interval: 1s
      timeout: 1s
      retries: 30
    deploy:
      resources:
        limits:
          cpus: '1.0'
        reservations:
          cpus: '1.0' 

  backend:
    container_name: backend
    hostname: backend
    build:
      context: ./../..
      dockerfile: environments/hw03/backend/Dockerfile
    ports:
      - "8080:8080" # REST service
    volumes:
      - ./backend/app.yaml:/app/app.yaml
    depends_on:
      postgres:
        condition: service_healthy

  goose:
    container_name: goose
    build:
      context: ./goose
    profiles:
      - migration
    environment:
      POSTGRES_USER: "app_hw"
      POSTGRES_PASSWORD: "Passw0rd"
      POSTGRES_DB: "hw"
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    volumes:
      - ./../../backend/migrations:/app/migrations

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://app_hw:Passw0rd@postgres:5432/hw?sslmode=disable"
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "9187:9187"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    privileged: true
    # depends_on:
    #   - postgres
    #   - backend

volumes:
  postgres-data:
  grafana-data:
  prometheus-data:
